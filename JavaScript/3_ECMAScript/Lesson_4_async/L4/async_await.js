// async/await
//     Функционал async/await для работы с асинхронным кодом (а именно для работы с
// обещаниями) появился в JS с приходом стандарта ES7, и пока еще не слишком
// поддерживается браузерами, но есть полифилы для работы с ними.
//     Суть подхода async/await - это писать асинхронный код так, будто он выполняется
// синхронно, но при этом не блокирует основной поток выполнения. Подход состоит
// из применения двух операторов:
//     ● async - пишется перед функцией и превращает любую функцию в обещание, а
// также позволяет использовать второй оператор await внутри себя.
// ● await - оператор пишется перед вызовом асинхронной функции, что
// заставляет код остановиться в этом месте, пока асинхронная функция не
// вернет результат.
//     Давайте посмотрим на пример:

//     Листинг 9
const getUser = async (url) => {
// Делаем запрос, и ждем его результат (указание await),
// который будет сохранен в константу response.
    const response = await fetch(url);
// Выполняем еще один асинхронный метод, преобразования в текст, также ждем результат, который сохраняется в
//     константу пользователь.
    const user = await response.text();
    console.log(user);
}
getUser('https://api.github.com/users/octocat');
// Вывод в консоль.
// {
// "login": "octocat",
// "id": 583231,
// ...
// }


// Синтаксис async/await позволяет писать код очень линейно и чисто.